version: "3"

networks:
  web-proxy:
    external: true

services:
  adguard: # Network wide adblock (setup admin port on 8021) - Check rules.yml
    container_name: adguard
    image: adguard/adguardhome
    restart: always
    network_mode: host
    volumes:
      - ./adguardhome/work:/opt/adguardhome/work
      - ./adguardhome/conf:/opt/adguardhome/conf

  homeassistant: # Home automation - Check rules.yml
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    network_mode: host
    volumes:
      - ./hass:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  wg-easy:
    networks:
      - web-proxy
    environment:
      - WG_HOST=vpn.$DOMAIN
      - PASSWORD=VPN_PASSWORD
      - WG_DEFAULT_DNS=ADGUARD_IP
    image: weejewel/wg-easy
    container_name: wg-easy
    volumes:
      - ./wgeasy:/etc/wireguard
    ports:
      - "51820:51820/udp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wgeasy.rule=Host(`wg.local.$DOMAIN`)"
      - "traefik.http.routers.wgeasy.tls.certresolver=le"
      - "traefik.http.services.wgeasy.loadbalancer.server.port=51821"

  traefik:
    container_name: traefik
    image: traefik:v2.8
    restart: always
    environment:
      - CF_API_EMAIL=$CF_API_EMAIL
      - CF_API_KEY=$CF_API_KEY
    networks:
      - web-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
      - ./rules.yml:/rules.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.local.$DOMAIN`)"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    networks:
      - web-proxy
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.local.$DOMAIN`)"
      - "traefik.http.routers.portainer.tls.certresolver=le"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  snapdrop:
    image: lscr.io/linuxserver/snapdrop:latest
    container_name: snapdrop
    networks:
      - web-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Zagreb
    volumes:
      - ./snapdrop:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.snapdrop.rule=Host(`snapdrop.local.$DOMAIN`)"
      - "traefik.http.routers.snapdrop.tls.certresolver=le"
      - "traefik.http.services.snapdrop.loadbalancer.server.port=80"

  kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    networks:
      - web-proxy
    volumes:
      - ./uptime-kuma:/app/data
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.status.rule=Host(`status.local.$DOMAIN`)"
      - "traefik.http.routers.status.tls.certresolver=le"
      - "traefik.http.services.status.loadbalancer.server.port=3001"
